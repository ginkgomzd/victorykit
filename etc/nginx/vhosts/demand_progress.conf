#
# flask.ginkgostreet.com
#
upstream upstream_vk_org {
  server unix:/home/victorykit/vk/sharedpids/unicorn-vk_app.sock fail_timeout=0;
}


#server {
#  server_name_in_redirect on;
##  server_name vk.rootstrikers.org *.vk.rootstrikers.org;
#  server_name flask.ginkgostreet.com;
#  listen 80;
#  rewrite ^ https://$server_name$request_uri? permanent;
#}


server {
#  server_name vk.rootstrikers.org *.vk.rootstrikers.org;
  server_name flask.ginkgostreet.com;
#  listen 443 ssl spdy;
#  ssl on;

##  ssl_certificate     /usr/local/etc/nginx/certs/ss-rsvk-org.crt;  # self-signed for testing
##  ssl_certificate_key /usr/local/etc/nginx/certs/ss-rsvk-org.key;  # self-signed for testing
#  ssl_certificate     /usr/local/etc/nginx/certs/rsvk-org.crt;
#  ssl_certificate_key /usr/local/etc/nginx/certs/rsvk-org.key;

#  ssl_prefer_server_ciphers on;
#  ssl_protocols       SSLv3 TLSv1 TLSv1.1 TLSv1.2;

#  ssl_ciphers CDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK;

#  # Alt cipher list to eventually be tested
#  # ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4";

#  # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
#  ssl_dhparam /usr/local/etc/nginx/certs/dhparam.pem;

#  # Enable this if your want HSTS (recommended, but be careful)
#  add_header Strict-Transport-Security max-age=15768000;

#  # OCSP Stapling ---
#  # fetch OCSP records from URL in ssl_certificate and cache them
#  ssl_stapling on;
#  ssl_stapling_verify on;

#  ## verify chain of trust of OCSP response using Root CA and Intermediate certs
#  ssl_trusted_certificate /usr/local/etc/nginx/certs/ss-rsvk-org.crt;
  
#  ### Hetzner Online AG installimage
#  resolver 213.133.99.99 213.133.100.100 213.133.98.98;

  client_max_body_size 100M;

  root /home/victorykit/vk/current/public;

  access_log /home/victorykit/vk/shared/log/vk_org-access.log main;
  error_log  /home/victorykit/vk/shared/log/vk_org-error.log debug;

  # Location for the Upstream (a/k/a Unicorn or Mongrel)
  location @vk_org {
    proxy_pass http://upstream_vk_org;
    include conf.d/proxy.common-conf;
  }

  # set Expire header on assets: see http://developer.yahoo.com/performance/rules.html#expires
#  location ~ ^/(images|assets|javascripts|stylesheets)/ {
#    try_files  $uri /last_assets/$uri @vk_org;
#    expires 10y;
#  }

  location ~ ^/(images|assets|javascripts|stylesheets)/ {
    try_files  $uri /last_assets/$uri @vk_org;
    gzip_static on; # to serve pre-gzipped version
    expires max;
    add_header Cache-Control public;
  }

  location / {
    if (-f $document_root/system/maintenance.html) { return 503; }
    try_files  $uri $uri/index.html $uri.html @vk_org;
  }

  # HTTP Error handling.
  #
  # 404 - Resource Not found.
  error_page 404 /404.html;

  # 500 - Internal Error
  # 502 - Bad Gateway
  # %04 - Gateway Timeout
  error_page 500 502 504 /500.html;

  # 503 - Service Unavailable
  error_page 503 @503;
  recursive_error_pages on;

  location @503 {
    error_page 405 = /system/maintenance.html;
    # Serve static assets if found.
    if (-f $request_filename) {
      break;
    }
    rewrite ^(.*)$ /system/maintenance.html break;
  }
}
